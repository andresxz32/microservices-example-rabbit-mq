[["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/infrastructure/persistence/FileCourseRepository.test.ts",{"fileContent":"import { FileCourseRepository } from '../../../../../../src/Contexts/app/Courses/infrastructure/persistence/FileCourseRepository';\nimport { CourseMother } from '../../domain/CourseMother';\n\ndescribe('FileCourseRepository', () => {\n  it('should save a course', async () => {\n    const repository = new FileCourseRepository();\n    const expectedCourse = CourseMother.random();\n\n    await repository.save(expectedCourse);\n\n    \n    const course = await repository.search(expectedCourse.id.value);\n    expect(course).toEqual(expectedCourse);\n  });\n});","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/infrastructure/persistence/FileCourseRepository.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/domain/CourseMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/Course.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseRepository.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/domain/CourseNameMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Shared/domain/Courses/CourseIdMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/application/CreateCourseRequest.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/application/CourseCreator.test.ts",{"fileContent":"\n\nimport { CourseMother } from '../domain/CourseMother';\nimport { CreateCourseRequestMother } from './CreateCourseRequestMother';\nimport { CourseRepositoryMock } from '../__mocks__/CourseRepositoryMock';\nimport { CourseCreator } from '../../../../../src/Contexts/app/Courses/application/CourseCreator';\nimport { CourseNameLengthExceeded } from '../../../../../src/Contexts/app/Courses/domain/CourseNameLengthExceeded';\n\nlet repository: CourseRepositoryMock;\nlet creator: CourseCreator;\n\nbeforeEach(() => {\n    repository = new CourseRepositoryMock();\n    creator = new CourseCreator(repository);\n});\n\ndescribe('CourseCreator', () => {\n    it('should create a valid course', async () => {\n        const request = CreateCourseRequestMother.random();\n\n        const course = CourseMother.fromRequest(request);\n\n        await creator.run(request);\n\n        repository.assertSaveHaveBeenCalledWith(course);\n    });\n\n    it('should throw error if course name length is exceeded', async () => {\n        expect(() => {\n            const request = CreateCourseRequestMother.invalidRequest();\n\n            const course = CourseMother.fromRequest(request);\n\n            creator.run(request);\n\n            repository.assertSaveHaveBeenCalledWith(course);\n        }).toThrow(CourseNameLengthExceeded);\n    });\n});","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/domain/CourseMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/application/CreateCourseRequestMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/__mocks__/CourseRepositoryMock.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/application/CourseCreator.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseNameLengthExceeded.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/domain/CourseNameMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Shared/domain/Courses/CourseIdMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/Course.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/application/CreateCourseRequest.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseRepository.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/Uuid.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/infrastructure/persistence/FileCourseRepository.ts",{"fileContent":"import { deserialize, serialize } from \"v8\";\nimport { Course } from \"../../domain/Course\";\nimport { CourseRepository } from \"../../domain/CourseRepository\";\nimport * as fs from 'fs';\nimport { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class FileCourseRepository implements CourseRepository {\n    private FILE_PATH = `${__dirname}/courses`\n\n    async save(course: Course): Promise<void> {\n        fs.promises.writeFile(this._filePath(course.id.value), serialize(course))\n    }\n\n    async search(courseId: string): Promise<Course> {\n        const courseData = await fs.promises.readFile(this._filePath(courseId));\n        const { id, name } = deserialize(courseData);\n        return new Course({ id, name })\n    }\n\n    private _filePath(id: string) {\n        return `${this.FILE_PATH}.${id}.repo`\n    }\n\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/Course.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseRepository.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/Course.ts",{"fileContent":"import { CourseId } from \"../../Shared/domain/Courses/CourseId\";\nimport { CourseName } from \"./CourseName\";\n\n\nexport class Course {\n  readonly id: CourseId;\n  readonly name: CourseName;\n\n  constructor({ id, name }: { id: CourseId, name: CourseName;  }) {\n    this.id = id;\n    this.name = name;\n  }\n\n  static fromPrimitives(plainData: {\n    id: string;\n    name: string;\n    duration: number;\n  }): Course {\n    return new Course({\n      id: new CourseId(plainData.id),\n      name: new CourseName(plainData.name)\n    });\n  }\n\n  toPrimitives(): any {\n    return {\n      id: this.id.value,\n      name: this.name.value\n    };\n  }\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/Uuid.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/StringValueObject.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseNameLengthExceeded.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts",{"fileContent":"import { Uuid } from '../../../../Shared/domain/value-object/Uuid';\n\nexport class CourseId extends Uuid { }","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/Uuid.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/Uuid.ts",{"fileContent":"import { v4 as uuid } from 'uuid';\nimport * as validate from 'uuid-validate';\nimport { InvalidArgumentError } from './InvalidArgumentError';\n\nexport class Uuid {\n\n    constructor(\n        readonly value: string\n    ) {\n        this.ensureIsValidUuid(value);\n    }\n\n    static random(): Uuid {\n        return new Uuid(uuid());\n    }\n\n    private ensureIsValidUuid(id: string): void {\n        if (!validate(id)) {\n            throw new InvalidArgumentError(`<${this.constructor.name}> does not allow the value <${id}>`);\n        }\n    }\n\n    toString(): string {\n        return this.value;\n    }\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts",{"fileContent":"export class InvalidArgumentError extends Error { }","resolvedModuleNames":[]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts",{"fileContent":"import { StringValueObject } from \"../../../Shared/domain/value-object/StringValueObject\";\nimport { CourseNameLengthExceeded } from \"./CourseNameLengthExceeded\";\n\n\nexport class CourseName extends StringValueObject {\n\n    constructor(value: string) {\n        super(value);\n        this.ensureLengthIsLessThan30Characters(value);\n    }\n\n    private ensureLengthIsLessThan30Characters(value: string): void {\n        if (value.length > 30) {\n            throw new CourseNameLengthExceeded(`The Course Name <${value}> has more than 30 characters`);\n        }\n    }\n\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/StringValueObject.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseNameLengthExceeded.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/StringValueObject.ts",{"fileContent":"export abstract class StringValueObject {\n    readonly value: string;\n  \n    constructor(value: string) {\n      this.value = value;\n    }\n  \n    toString(): string {\n      return this.value;\n    }\n  }","resolvedModuleNames":[]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseNameLengthExceeded.ts",{"fileContent":"import { InvalidArgumentError } from \"../../../Shared/domain/value-object/InvalidArgumentError\";\n\nexport class CourseNameLengthExceeded extends InvalidArgumentError { }","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/domain/CourseMother.ts",{"fileContent":"import { CourseNameMother } from './CourseNameMother';\nimport { CourseIdMother } from '../../Shared/domain/Courses/CourseIdMother';\nimport { Course } from '../../../../../src/Contexts/app/Courses/domain/Course';\nimport { CourseName } from '../../../../../src/Contexts/app/Courses/domain/CourseName';\nimport { CourseId } from '../../../../../src/Contexts/app/Shared/domain/Courses/CourseId';\nimport { CreateCourseRequest } from '../../../../../src/Contexts/app/Courses/application/CreateCourseRequest';\n\n\nexport class CourseMother {\n  static create(id: CourseId, name: CourseName): Course {\n    return new Course({ id, name });\n  }\n\n  static fromRequest(request: CreateCourseRequest): Course {\n    return this.create(\n      CourseIdMother.create(request.id),\n      CourseNameMother.create(request.name)\n    );\n  }\n\n  static random(): Course {\n    return this.create(CourseIdMother.random(), CourseNameMother.random());\n  }\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/domain/CourseNameMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Shared/domain/Courses/CourseIdMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/Course.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/application/CreateCourseRequest.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/WordMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/UuidMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/StringValueObject.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseNameLengthExceeded.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/Uuid.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/domain/CourseNameMother.ts",{"fileContent":"import { CourseName } from '../../../../../src/Contexts/app/Courses/domain/CourseName';\nimport { WordMother } from '../../../Shared/domain/WordMother';\n\nexport class CourseNameMother {\n    \n  static create(value: string): CourseName {\n    return new CourseName(value);\n  }\n\n  static random(): CourseName {\n    return this.create(WordMother.random({ maxLength: 20 }));\n  }\n\n  static invalidName(): string {\n    return \"a\".repeat(40);\n  }\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/WordMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/StringValueObject.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseNameLengthExceeded.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/WordMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class WordMother {\n  static random({ minLength = 1, maxLength }: { minLength?: number; maxLength: number }): string {\n    return MotherCreator.random().lorem.word(Math.floor(Math.random() * (maxLength - minLength)) + minLength) || 'word';\n  }\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/MotherCreator.ts",{"fileContent":"\nimport { faker } from '@faker-js/faker';\nexport class MotherCreator {\n  static random() {\n    return faker;\n  }\n}","resolvedModuleNames":[]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Shared/domain/Courses/CourseIdMother.ts",{"fileContent":"import { CourseId } from '../../../../../../src/Contexts/app/Shared/domain/Courses/CourseId';\nimport { UuidMother } from '../../../../Shared/domain/UuidMother';\n\nexport class CourseIdMother {\n    static create(value: string): CourseId {\n        return new CourseId(value);\n    }\n    static random(): CourseId {\n        return this.create(UuidMother.random());\n    }\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/UuidMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/Uuid.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/UuidMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class UuidMother {\n  static random(): string {\n    return MotherCreator.random().datatype.uuid();\n  }\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/application/CreateCourseRequestMother.ts",{"fileContent":"import { CourseNameMother } from '../domain/CourseNameMother';\nimport { CourseIdMother } from '../../Shared/domain/Courses/CourseIdMother';\nimport { CourseName } from '../../../../../src/Contexts/app/Courses/domain/CourseName';\nimport { CourseId } from '../../../../../src/Contexts/app/Shared/domain/Courses/CourseId';\nimport { CreateCourseRequest } from '../../../../../src/Contexts/app/Courses/application/CreateCourseRequest';\n\nexport class CreateCourseRequestMother {\n    static create(id: CourseId, name: CourseName): CreateCourseRequest {\n        return { id: id.value, name: name.value};\n    }\n\n    static random(): CreateCourseRequest {\n        return this.create(CourseIdMother.random(), CourseNameMother.random());\n    }\n\n    static invalidRequest(): CreateCourseRequest {\n        return {\n            id: CourseIdMother.random().value,\n            name: CourseNameMother.invalidName()\n        };\n    }\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/domain/CourseNameMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Shared/domain/Courses/CourseIdMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/application/CreateCourseRequest.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/WordMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/Shared/domain/UuidMother.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/StringValueObject.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseNameLengthExceeded.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/Uuid.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/tests/Contexts/app/Courses/__mocks__/CourseRepositoryMock.ts",{"fileContent":"import { Course } from '../../../../../src/Contexts/app/Courses/domain/Course';\nimport { CourseRepository } from '../../../../../src/Contexts/app/Courses/domain/CourseRepository';\n\nexport class CourseRepositoryMock implements CourseRepository {\n  private saveMock: jest.Mock;\n\n  constructor() {\n    this.saveMock = jest.fn();\n  }\n\n  async save(course: Course): Promise<void> {\n    this.saveMock(course);\n  }\n\n  assertSaveHaveBeenCalledWith(expected: Course): void {\n    expect(this.saveMock).toHaveBeenCalledWith(expected);\n  }\n\n}","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/Course.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseRepository.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts"]}],["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/application/CourseCreator.ts",{"fileContent":"import { Inject, Injectable } from \"@nestjs/common\";\nimport { Uuid } from \"../../../Shared/domain/value-object/Uuid\";\nimport { Course } from \"../domain/Course\";\nimport { CourseName } from \"../domain/CourseName\";\nimport { CourseRepository } from \"../domain/CourseRepository\";\n\n\nconst CourseRepo = () => Inject('CourseRepository');\n\n@Injectable()\nexport class CourseCreator {\n    constructor\n        (\n            @CourseRepo() private readonly _repository: CourseRepository,\n        ) {\n    }\n    async run(request): Promise<void> {\n\n        const course = new Course(\n            {\n                id: new Uuid(request.id),\n                name: new CourseName(request.name)\n            });\n\n        await this._repository.save(course);\n    }\n\n}\n","resolvedModuleNames":["/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/Uuid.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/Course.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseName.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseRepository.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Shared/domain/Courses/CourseId.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/Shared/domain/value-object/StringValueObject.ts","/home/pipe-dev/dev/personal-projects/ddd-skeleton/src/Contexts/app/Courses/domain/CourseNameLengthExceeded.ts"]}]]